2025-06-06-17:36
1️⃣一加13、Ace5Pro编译KCFLAGS取消加入-Wno-error替换成-O2参数开启中等优化以提升生成代码的性能
2025-06-06-17:00
1️⃣本地SH脚本修复一加13T编译失败问题
2025-06-05-20:32
1️⃣Action工作流脚本添加stable分支与Dev分支选项(由6个流程变回3个了）
2025-06-05-20:00
1️⃣本地SH脚本添加stable分支与Dev分支选项
2025-06-04-23:47
1️⃣创建云工作流编译（来自@HanKuCha）
2️⃣同时创建Dev分支与stable分支工作流选择编译（及开发版与稳定版）
2025-06-04-22：15
❌本地SH编译成功后自动初始化至sync同步源码时的状态（下次编译无需重新拉取源码从而节省时间）#貌似失败了，等待解决方案
2025-06-02-03:54:
1️⃣重构所有代码重新使用 LLVM/Clang 工具链编译
2️⃣使用cceche缓存加速编译（编译速度加快3-10倍）
3️⃣保留使用多线程并行构建（大约不到10分钟）
4️⃣按设备型号区分工作目录和 ccache 缓存（不同机型互不干涉）
5️⃣❌❌❌编译成功后自动初始化至sync同步源码时的状态（下次编译无需重新拉取源码从而节省时间）
6️⃣编译后的Image及AnyKernel3压缩包复制到C:\Kernel_Build
至此本脚本的所有说明如下：
主要功能
用户交互：
1.允许用户选择设备型号
2.可自定义内核名称和构建日期
3.可选择启用 KPM 和 LZ4KD 功能
环境配置：
1.按设备型号区分工作目录和 ccache 缓存
2.检查并安装必要的依赖项
3.配置 Git 用户信息
源码管理：
1.安装 repo 工具
2.同步内核源码
3.清理保护导出文件
内核定制：
1.集成 SukiSU（内核级 root 方案）
2.添加 SUSFS 文件系统支持
3.应用 HMBird GKI 补丁
4.可选 LZ4KD 压缩算法支持
5.可选 KPM（内核模块）支持
构建过程：
1.使用 LLVM/Clang 工具链编译
2.应用 Linux 补丁
3.创建 AnyKernel3 刷机包
输出管理：
1.将编译结果保存到指定目录
2.尝试复制到 Windows 系统（通过 WSL）
3.清理临时文件和修改
技术亮点
模块化设计：
1.按设备型号隔离工作环境和缓存
2.可选功能通过用户交互启用
性能优化：
1.使用 ccache 加速编译
2.并行编译（根据 CPU 核心数）
错误处理：
1.详细的错误检查和提示
2.关键步骤失败会终止脚本
自动化程度高：
1.从环境配置到打包全自动完成
2.自动处理依赖和工具安装
--------以下定义为重构之前的旧版本更新--------
2025-06-01-21:47:
1️⃣使用Clang+LLVM+LD.lld工具链
2️⃣解决.repo频发报错问题
3️⃣使用多线程并行构建(-j参数)
2025-06-01-12:07：
1️⃣支持编译一加13T
2️⃣支持自主选择自定义内核名称
3️⃣支持自定义任意语言名称(含中文或emoji)
2025-06-01-11:30：
1️⃣使用Clang编译(编译速度加快)
2️⃣自动选择原官方构建时间戳
3️⃣取消内核名称自定义(有点小BUG)
4️⃣同步@HanKuCha工作流更新
2025-05-30-22:21：
1️⃣回退初始版本以保证编译成功
2025-05-30-21:47：
1️⃣修复cd到主用户识别成/root的错误
2️⃣简化部分代码
2025-05-30-12:07：
1️⃣修复repo初始化错误
2️⃣优化设备树节点

